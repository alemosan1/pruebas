input {
    beats {
      port => 5044
    }
}

filter { 
	if [type] == "vlc_server" or [type] == "vlc_client" {
		grok { 
			match => { "message" => "%{DATE:date} %{TIME:time}] %{MSGCODE:[@metadata][codigo_log]} %{MSGSRC:[log_msg][log_type]} %{LOGLEVEL:[log_msg][log_level]}:  ?%{GREEDYDATA:[log_msg][log_description]}?" }
		}
		mutate { remove_field => [ "beat", "@version", "offset", "host", "tags", "input_type"] }
	} else if [type] == "infosession_server" {
		grok { match => {"message" => "%{WORD:[@metadata][info_from]},%{UUID:unique_id}" } }
		kv { 
			field_split => ","
			target => "parsed_info"
		}
		mutate { rename => { "parsed_info" => "%{[@metadata][info_from]}" } }
		# Hay que instalar este filtro :
		# bin/logstash-plugin install logstash-filter-aggregate
		aggregate{
			task_id => "%{unique_id}"
			code => "event.to_hash.each do |key,value|
        				map[key] = value unless map.has_key?(key)
        				map[key] << value if map[key].is_a?(Array) and !value.is_a?(Array)
      				end"
			push_previous_map_as_event => true
			timeout => 5
			timeout_tags => ['aggregated']
		}
		# Eliminamos las entradas individuales para quedarnos solo con la que tiene toda la info agrupada
		if "aggregated" not in [tags] { drop {} } 
		mutate { remove_field => [ "beat", "@version", "offset", "host", "tags", "input_type", "message"] }

	} else if [type] == "infosession_client" {
		grok { match => { "message" => "%{UUID:unique_id}" } }
		kv { target => "parsed_info" }
		mutate { remove_field => [ "beat", "@version", "offset", "host", "tags", "input_type", "message"] }
	}

	if "_grokparsefailure" in [tags] { drop {} }
}

output {
	if [type] == "vlc_client" and "Sending request: PLAY" in [message]{
		pipe { # Ejecutamos el parseo del cliente automaticamente
			command => "cd /home/bayes/Repositories/pruebas; python parseInfoSessionClient.py %{[source]}"
		}		
	}
	
	if [type] == "vlc_server" {
		elasticsearch {
			hosts => ["localhost:9200"]
		   	index => "vlcserver" # TODO: Poner nombre de sesion en la bd
		}
	} else if [type] == "vlc_client" {
		elasticsearch {
			hosts => ["localhost:9200"]
		   	index => "vlcclient"  # TODO: Poner nombre de sesion en la bd
		}
	} else if [type] == "infosession_server" {
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "infosession_server" # Este se queda así porque solo tenemos una entrada por sesion
		}
	} else if [type] == "infosession_client" {
		elasticsearch {
			hosts => ["localhost:9200"]
		   	index => "infosession_client" # Este se queda así porque solo tenemos una entrada por sesion
		}
	}
}
